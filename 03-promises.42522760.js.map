{"mappings":"qhBAAA,IAAAA,EAAAC,EAAA,SAEA,SAASC,EAAcC,EAAUC,GAC/B,OAAO,IAAIC,SAAQ,CAACC,EAASC,KACLC,KAAKC,SAAW,GAEpCC,YAAW,KACTJ,EAAQ,C,SAAEH,E,MAAUC,GAAQ,GAC3BA,GAEHM,YAAW,KACTH,EAAO,C,SAAEJ,E,MAAUC,GAAQ,GAC1BA,EAAM,G,CAKf,MAAMO,EAAO,CACXC,OAAQC,SAASC,cAAc,UAC/BC,QAASF,SAASC,cAAc,uBAChCE,SAAUH,SAASC,cAAc,wBACjCG,OAAQJ,SAASC,cAAc,uBAGjCH,EAAKC,OAAOM,iBAAiB,SAE7B,SAAsBC,GACpBA,EAAMC,iBAEN,MAAMC,EAAQC,SAASX,EAAKI,QAAQQ,OAC9BC,EAAOF,SAASX,EAAKM,OAAOM,OAC5BE,EAASH,SAASX,EAAKK,SAASO,OAEtC,IAAK,IAAIG,EAAI,EAAGA,GAAKD,EAAQC,IAAK,CAIhCxB,EAHiBwB,EACIL,GAASK,EAAI,GAAKF,GAGpCG,MAAK,EAACxB,SAAEA,EAAQC,MAAEA,MACjBwB,EAAA5B,GAAS6B,OAAOC,QAAQ,uBAAqB3B,QAAiBC,MAAU,IAEzE2B,OAAM,EAAC5B,SAAEA,EAAQC,MAAEA,MAClBwB,EAAA5B,GAAS6B,OAAOG,QAAQ,sBAAoB7B,QAAeC,MAAU,G","sources":["src/js/03-promises.js"],"sourcesContent":["import Notiflix from 'notiflix';\n\nfunction createPromise(position, delay) {\n  return new Promise((resolve, reject) => {\n    const shouldResolve = Math.random() > 0.3;\n    if (shouldResolve) {\n      setTimeout(() => {\n        resolve({ position, delay });\n      }, delay);\n    } else {\n      setTimeout(() => {\n        reject({ position, delay });\n      }, delay);\n    }\n  });\n}\n\nconst refs = {\n  button: document.querySelector('button'),\n  delayEl: document.querySelector('input[name=\"delay\"]'),\n  amountEl: document.querySelector('input[name=\"amount\"]'),\n  stepEl: document.querySelector('input[name=\"step\"]'),\n};\n\nrefs.button.addEventListener('click', handleSubmit);\n\nfunction handleSubmit(event) {\n  event.preventDefault();\n\n  const delay = parseInt(refs.delayEl.value);\n  const step = parseInt(refs.stepEl.value);\n  const amount = parseInt(refs.amountEl.value);\n\n  for (let i = 1; i <= amount; i++) {\n    const position = i;\n    const promiseDelay = delay + (i - 1) * step;\n\n    createPromise(position, promiseDelay)\n      .then(({ position, delay }) => {\n        Notiflix.Notify.success(`✅ Fulfilled promise ${position} in ${delay}ms`);\n      })\n      .catch(({ position, delay }) => {\n        Notiflix.Notify.failure(`❌ Rejected promise ${position} in ${delay}ms`);\n      });\n  }\n}\n\n\n"],"names":["$7Y9D8","parcelRequire","$47d4ff9957288465$var$createPromise","position","delay","Promise","resolve","reject","Math","random","setTimeout","$47d4ff9957288465$var$refs","button","document","querySelector","delayEl","amountEl","stepEl","addEventListener","event","preventDefault","delay1","parseInt","value","step","amount","i","then","$parcel$interopDefault","Notify","success","catch","failure"],"version":3,"file":"03-promises.42522760.js.map"}